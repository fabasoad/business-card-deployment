---
name: Terraform

on:
  workflow_dispatch:

jobs:
  build_bundle:
    name: Build bundle
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release tag
        id: latest_release
        run: |
          latest_tag=$(curl  "https://api.github.com/repos/fabasoad/business-card/tags" | jq -r '.[0].name')
          echo "::set-output name=tag::${latest_tag}"
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: fabasoad/business-card
          ref: refs/tags/${{ steps.latest_release.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Cache node_modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Compile
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install
      - name: Build bundle
        run: yarn run build:prod
      - name: Archive bundle
        run: |
          zip -r business-card-payload.zip public
          zip -j business-card-payload.zip server/{package.json,app.js}
      - name: Upload bundle
        uses: actions/upload-artifact@v2
        with:
          name: business-card-payload
          path: business-card-payload.zip
  terraform:
    name: Terraform
    needs: build_bundle
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release tag
        id: latest_release
        run: |
          latest_tag=$(curl "https://api.github.com/repos/fabasoad/business-card/tags" | jq -r '.[0].name')
          echo "::set-output name=tag::${latest_tag}"
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Create tfvars
        run: echo "app_version = \"${{ steps.latest_release.outputs.tag }}\"" >> vars.auto.tfvars
      - name: Download bundle
        uses: actions/download-artifact@v2
        with:
          name: business-card-payload
          path: ./
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
#      - name: Terraform Apply
#        if: github.event_name == 'workflow_dispatch'
#        run: terraform apply -auto-approve
